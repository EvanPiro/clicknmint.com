export default {
  abi: [
    {
      inputs: [],
      stateMutability: "nonpayable",
      type: "constructor",
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: "address",
          name: "owner",
          type: "address",
        },
        {
          indexed: true,
          internalType: "address",
          name: "approved",
          type: "address",
        },
        {
          indexed: true,
          internalType: "uint256",
          name: "tokenId",
          type: "uint256",
        },
      ],
      name: "Approval",
      type: "event",
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: "address",
          name: "owner",
          type: "address",
        },
        {
          indexed: true,
          internalType: "address",
          name: "operator",
          type: "address",
        },
        {
          indexed: false,
          internalType: "bool",
          name: "approved",
          type: "bool",
        },
      ],
      name: "ApprovalForAll",
      type: "event",
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: "address",
          name: "previousOwner",
          type: "address",
        },
        {
          indexed: true,
          internalType: "address",
          name: "newOwner",
          type: "address",
        },
      ],
      name: "OwnershipTransferred",
      type: "event",
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: "address",
          name: "from",
          type: "address",
        },
        {
          indexed: true,
          internalType: "address",
          name: "to",
          type: "address",
        },
        {
          indexed: true,
          internalType: "uint256",
          name: "tokenId",
          type: "uint256",
        },
      ],
      name: "Transfer",
      type: "event",
    },
    {
      inputs: [
        {
          internalType: "address",
          name: "to",
          type: "address",
        },
        {
          internalType: "uint256",
          name: "tokenId",
          type: "uint256",
        },
      ],
      name: "approve",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [
        {
          internalType: "address",
          name: "owner",
          type: "address",
        },
      ],
      name: "balanceOf",
      outputs: [
        {
          internalType: "uint256",
          name: "",
          type: "uint256",
        },
      ],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [],
      name: "collect",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [],
      name: "fee",
      outputs: [
        {
          internalType: "uint256",
          name: "",
          type: "uint256",
        },
      ],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [
        {
          internalType: "uint256",
          name: "tokenId",
          type: "uint256",
        },
      ],
      name: "getApproved",
      outputs: [
        {
          internalType: "address",
          name: "",
          type: "address",
        },
      ],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [
        {
          internalType: "address",
          name: "owner",
          type: "address",
        },
        {
          internalType: "address",
          name: "operator",
          type: "address",
        },
      ],
      name: "isApprovedForAll",
      outputs: [
        {
          internalType: "bool",
          name: "",
          type: "bool",
        },
      ],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [],
      name: "name",
      outputs: [
        {
          internalType: "string",
          name: "",
          type: "string",
        },
      ],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [],
      name: "owner",
      outputs: [
        {
          internalType: "address",
          name: "",
          type: "address",
        },
      ],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [
        {
          internalType: "uint256",
          name: "tokenId",
          type: "uint256",
        },
      ],
      name: "ownerOf",
      outputs: [
        {
          internalType: "address",
          name: "",
          type: "address",
        },
      ],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [
        {
          internalType: "address",
          name: "recipient",
          type: "address",
        },
        {
          internalType: "string",
          name: "tokenURI",
          type: "string",
        },
      ],
      name: "printNFT",
      outputs: [
        {
          internalType: "uint256",
          name: "",
          type: "uint256",
        },
      ],
      stateMutability: "payable",
      type: "function",
    },
    {
      inputs: [],
      name: "renounceOwnership",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [
        {
          internalType: "address",
          name: "from",
          type: "address",
        },
        {
          internalType: "address",
          name: "to",
          type: "address",
        },
        {
          internalType: "uint256",
          name: "tokenId",
          type: "uint256",
        },
      ],
      name: "safeTransferFrom",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [
        {
          internalType: "address",
          name: "from",
          type: "address",
        },
        {
          internalType: "address",
          name: "to",
          type: "address",
        },
        {
          internalType: "uint256",
          name: "tokenId",
          type: "uint256",
        },
        {
          internalType: "bytes",
          name: "data",
          type: "bytes",
        },
      ],
      name: "safeTransferFrom",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [
        {
          internalType: "address",
          name: "operator",
          type: "address",
        },
        {
          internalType: "bool",
          name: "approved",
          type: "bool",
        },
      ],
      name: "setApprovalForAll",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [
        {
          internalType: "bytes4",
          name: "interfaceId",
          type: "bytes4",
        },
      ],
      name: "supportsInterface",
      outputs: [
        {
          internalType: "bool",
          name: "",
          type: "bool",
        },
      ],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [],
      name: "symbol",
      outputs: [
        {
          internalType: "string",
          name: "",
          type: "string",
        },
      ],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [
        {
          internalType: "uint256",
          name: "tokenId",
          type: "uint256",
        },
      ],
      name: "tokenURI",
      outputs: [
        {
          internalType: "string",
          name: "",
          type: "string",
        },
      ],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [
        {
          internalType: "address",
          name: "from",
          type: "address",
        },
        {
          internalType: "address",
          name: "to",
          type: "address",
        },
        {
          internalType: "uint256",
          name: "tokenId",
          type: "uint256",
        },
      ],
      name: "transferFrom",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [
        {
          internalType: "address",
          name: "newOwner",
          type: "address",
        },
      ],
      name: "transferOwnership",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
  ],
  bytecode: {
    object:
      "0x6080604052662386f26fc100006008553480156200001c57600080fd5b506040518060400160405280600a81526020016918db1a58dadb9b5a5b9d60b21b8152506040518060400160405280600481526020016310d3135560e21b81525081600090816200006e91906200019b565b5060016200007d82826200019b565b5050506200009a62000094620000a060201b60201c565b620000a4565b62000267565b3390565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200012157607f821691505b6020821081036200014257634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200019657600081815260208120601f850160051c81016020861015620001715750805b601f850160051c820191505b8181101562000192578281556001016200017d565b5050505b505050565b81516001600160401b03811115620001b757620001b7620000f6565b620001cf81620001c884546200010c565b8462000148565b602080601f831160018114620002075760008415620001ee5750858301515b600019600386901b1c1916600185901b17855562000192565b600085815260208120601f198616915b82811015620002385788860151825594840194600190910190840162000217565b5085821015620002575787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b611a2080620002776000396000f3fe6080604052600436106101145760003560e01c8063715018a6116100a0578063c87b56dd11610064578063c87b56dd146102f3578063ddca3f4314610313578063e522538114610329578063e985e9c51461033e578063f2fde38b1461038757600080fd5b8063715018a61461026b5780638da5cb5b1461028057806395d89b411461029e578063a22cb465146102b3578063b88d4fde146102d357600080fd5b806323b872dd116100e757806323b872dd146101ca57806342842e0e146101ea578063595c49151461020a5780636352211e1461022b57806370a082311461024b57600080fd5b806301ffc9a71461011957806306fdde031461014e578063081812fc14610170578063095ea7b3146101a8575b600080fd5b34801561012557600080fd5b506101396101343660046113ea565b6103a7565b60405190151581526020015b60405180910390f35b34801561015a57600080fd5b506101636103f9565b6040516101459190611457565b34801561017c57600080fd5b5061019061018b36600461146a565b61048b565b6040516001600160a01b039091168152602001610145565b3480156101b457600080fd5b506101c86101c336600461149f565b6104b2565b005b3480156101d657600080fd5b506101c86101e53660046114c9565b6105cc565b3480156101f657600080fd5b506101c86102053660046114c9565b6105fd565b61021d610218366004611591565b610618565b604051908152602001610145565b34801561023757600080fd5b5061019061024636600461146a565b6106b3565b34801561025757600080fd5b5061021d6102663660046115f3565b610713565b34801561027757600080fd5b506101c8610799565b34801561028c57600080fd5b506007546001600160a01b0316610190565b3480156102aa57600080fd5b506101636107ad565b3480156102bf57600080fd5b506101c86102ce36600461160e565b6107bc565b3480156102df57600080fd5b506101c86102ee36600461164a565b6107cb565b3480156102ff57600080fd5b5061016361030e36600461146a565b610803565b34801561031f57600080fd5b5061021d60085481565b34801561033557600080fd5b506101c8610913565b34801561034a57600080fd5b506101396103593660046116c6565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b34801561039357600080fd5b506101c86103a23660046115f3565b61095f565b60006001600160e01b031982166380ac58cd60e01b14806103d857506001600160e01b03198216635b5e139f60e01b145b806103f357506301ffc9a760e01b6001600160e01b03198316145b92915050565b606060008054610408906116f9565b80601f0160208091040260200160405190810160405280929190818152602001828054610434906116f9565b80156104815780601f1061045657610100808354040283529160200191610481565b820191906000526020600020905b81548152906001019060200180831161046457829003601f168201915b5050505050905090565b6000610496826109d8565b506000908152600460205260409020546001600160a01b031690565b60006104bd826106b3565b9050806001600160a01b0316836001600160a01b03160361052f5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b038216148061054b575061054b8133610359565b6105bd5760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c0000006064820152608401610526565b6105c78383610a37565b505050565b6105d63382610aa5565b6105f25760405162461bcd60e51b815260040161052690611733565b6105c7838383610b23565b6105c7838383604051806020016040528060008152506107cb565b600060085434101561067d5760405162461bcd60e51b815260206004820152602860248201527f466565206f6620302e3031206d75737420626520616464656420746f207472616044820152673739b0b1ba34b7b760c11b6064820152608401610526565b600061068860095490565b90506106948482610c94565b61069e8184610e2d565b6106ac600980546001019055565b9392505050565b6000818152600260205260408120546001600160a01b0316806103f35760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610526565b60006001600160a01b03821661077d5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b6064820152608401610526565b506001600160a01b031660009081526003602052604090205490565b6107a1610ec0565b6107ab6000610f1a565b565b606060018054610408906116f9565b6107c7338383610f6c565b5050565b6107d53383610aa5565b6107f15760405162461bcd60e51b815260040161052690611733565b6107fd8484848461103a565b50505050565b606061080e826109d8565b60008281526006602052604081208054610827906116f9565b80601f0160208091040260200160405190810160405280929190818152602001828054610853906116f9565b80156108a05780601f10610875576101008083540402835291602001916108a0565b820191906000526020600020905b81548152906001019060200180831161088357829003601f168201915b5050505050905060006108be60408051602081019091526000815290565b905080516000036108d0575092915050565b8151156109025780826040516020016108ea929190611780565b60405160208183030381529060405292505050919050565b61090b8461106d565b949350505050565b60006109276007546001600160a01b031690565b6040519091506001600160a01b038216904780156108fc02916000818181858888f193505050501580156107c7573d6000803e3d6000fd5b610967610ec0565b6001600160a01b0381166109cc5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610526565b6109d581610f1a565b50565b6000818152600260205260409020546001600160a01b03166109d55760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610526565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610a6c826106b3565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610ab1836106b3565b9050806001600160a01b0316846001600160a01b03161480610af857506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b8061090b5750836001600160a01b0316610b118461048b565b6001600160a01b031614949350505050565b826001600160a01b0316610b36826106b3565b6001600160a01b031614610b5c5760405162461bcd60e51b8152600401610526906117af565b6001600160a01b038216610bbe5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610526565b610bcb83838360016110e0565b826001600160a01b0316610bde826106b3565b6001600160a01b031614610c045760405162461bcd60e51b8152600401610526906117af565b600081815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260038552838620805460001901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6001600160a01b038216610cea5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610526565b6000818152600260205260409020546001600160a01b031615610d4f5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610526565b610d5d6000838360016110e0565b6000818152600260205260409020546001600160a01b031615610dc25760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610526565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6000828152600260205260409020546001600160a01b0316610ea85760405162461bcd60e51b815260206004820152602e60248201527f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60448201526d32bc34b9ba32b73a103a37b5b2b760911b6064820152608401610526565b60008281526006602052604090206105c78282611842565b6007546001600160a01b031633146107ab5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610526565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b031603610fcd5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610526565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b611045848484610b23565b61105184848484611168565b6107fd5760405162461bcd60e51b815260040161052690611902565b6060611078826109d8565b600061108f60408051602081019091526000815290565b905060008151116110af57604051806020016040528060008152506106ac565b806110b984611269565b6040516020016110ca929190611780565b6040516020818303038152906040529392505050565b60018111156107fd576001600160a01b03841615611126576001600160a01b0384166000908152600360205260408120805483929061112090849061196a565b90915550505b6001600160a01b038316156107fd576001600160a01b0383166000908152600360205260408120805483929061115d90849061197d565b909155505050505050565b60006001600160a01b0384163b1561125e57604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906111ac903390899088908890600401611990565b6020604051808303816000875af19250505080156111e7575060408051601f3d908101601f191682019092526111e4918101906119cd565b60015b611244573d808015611215576040519150601f19603f3d011682016040523d82523d6000602084013e61121a565b606091505b50805160000361123c5760405162461bcd60e51b815260040161052690611902565b805181602001fd5b6001600160e01b031916630a85bd0160e11b14905061090b565b506001949350505050565b60606000611276836112fc565b600101905060008167ffffffffffffffff81111561129657611296611505565b6040519080825280601f01601f1916602001820160405280156112c0576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a85049450846112ca57509392505050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b831061133b5772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310611367576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061138557662386f26fc10000830492506010015b6305f5e100831061139d576305f5e100830492506008015b61271083106113b157612710830492506004015b606483106113c3576064830492506002015b600a83106103f35760010192915050565b6001600160e01b0319811681146109d557600080fd5b6000602082840312156113fc57600080fd5b81356106ac816113d4565b60005b8381101561142257818101518382015260200161140a565b50506000910152565b60008151808452611443816020860160208601611407565b601f01601f19169290920160200192915050565b6020815260006106ac602083018461142b565b60006020828403121561147c57600080fd5b5035919050565b80356001600160a01b038116811461149a57600080fd5b919050565b600080604083850312156114b257600080fd5b6114bb83611483565b946020939093013593505050565b6000806000606084860312156114de57600080fd5b6114e784611483565b92506114f560208501611483565b9150604084013590509250925092565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff8084111561153657611536611505565b604051601f8501601f19908116603f0116810190828211818310171561155e5761155e611505565b8160405280935085815286868601111561157757600080fd5b858560208301376000602087830101525050509392505050565b600080604083850312156115a457600080fd5b6115ad83611483565b9150602083013567ffffffffffffffff8111156115c957600080fd5b8301601f810185136115da57600080fd5b6115e98582356020840161151b565b9150509250929050565b60006020828403121561160557600080fd5b6106ac82611483565b6000806040838503121561162157600080fd5b61162a83611483565b91506020830135801515811461163f57600080fd5b809150509250929050565b6000806000806080858703121561166057600080fd5b61166985611483565b935061167760208601611483565b925060408501359150606085013567ffffffffffffffff81111561169a57600080fd5b8501601f810187136116ab57600080fd5b6116ba8782356020840161151b565b91505092959194509250565b600080604083850312156116d957600080fd5b6116e283611483565b91506116f060208401611483565b90509250929050565b600181811c9082168061170d57607f821691505b60208210810361172d57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b60008351611792818460208801611407565b8351908301906117a6818360208801611407565b01949350505050565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b601f8211156105c757600081815260208120601f850160051c8101602086101561181b5750805b601f850160051c820191505b8181101561183a57828155600101611827565b505050505050565b815167ffffffffffffffff81111561185c5761185c611505565b6118708161186a84546116f9565b846117f4565b602080601f8311600181146118a5576000841561188d5750858301515b600019600386901b1c1916600185901b17855561183a565b600085815260208120601f198616915b828110156118d4578886015182559484019460019091019084016118b5565b50858210156118f25787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b818103818111156103f3576103f3611954565b808201808211156103f3576103f3611954565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906119c39083018461142b565b9695505050505050565b6000602082840312156119df57600080fd5b81516106ac816113d456fea264697066735822122047e1019ce0f0cc93c500866db7d6a699f95c60874c6a00fc654e29e9c2d33a0364736f6c63430008110033",
    sourceMap:
      "268:1019:31:-:0;;;398:15;377:36;;461:45;;;;;;;;;;1390:113:17;;;;;;;;;;;;;-1:-1:-1;;;1390:113:17;;;;;;;;;;;;;;;;-1:-1:-1;;;1390:113:17;;;1464:5;1456;:13;;;;;;:::i;:::-;-1:-1:-1;1479:7:17;:17;1489:7;1479;:17;:::i;:::-;;1390:113;;936:32:16;955:12;:10;;;:12;;:::i;:::-;936:18;:32::i;:::-;268:1019:31;;640:96:23;719:10;;640:96::o;2433:187:16:-;2525:6;;;-1:-1:-1;;;;;2541:17:16;;;-1:-1:-1;;;;;;2541:17:16;;;;;;;2573:40;;2525:6;;;2541:17;2525:6;;2573:40;;2506:16;;2573:40;2496:124;2433:187;:::o;14:127:33:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:545::-;759:2;754:3;751:11;748:448;;;795:1;820:5;816:2;809:17;865:4;861:2;851:19;935:2;923:10;919:19;916:1;912:27;906:4;902:38;971:4;959:10;956:20;953:47;;;-1:-1:-1;994:4:33;953:47;1049:2;1044:3;1040:12;1037:1;1033:20;1027:4;1023:31;1013:41;;1104:82;1122:2;1115:5;1112:13;1104:82;;;1167:17;;;1148:1;1137:13;1104:82;;;1108:3;;;748:448;657:545;;;:::o;1378:1352::-;1498:10;;-1:-1:-1;;;;;1520:30:33;;1517:56;;;1553:18;;:::i;:::-;1582:97;1672:6;1632:38;1664:4;1658:11;1632:38;:::i;:::-;1626:4;1582:97;:::i;:::-;1734:4;;1798:2;1787:14;;1815:1;1810:663;;;;2517:1;2534:6;2531:89;;;-1:-1:-1;2586:19:33;;;2580:26;2531:89;-1:-1:-1;;1335:1:33;1331:11;;;1327:24;1323:29;1313:40;1359:1;1355:11;;;1310:57;2633:81;;1780:944;;1810:663;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1846:20:33;;;1964:236;1978:7;1975:1;1972:14;1964:236;;;2067:19;;;2061:26;2046:42;;2159:27;;;;2127:1;2115:14;;;;1994:19;;1964:236;;;1968:3;2228:6;2219:7;2216:19;2213:201;;;2289:19;;;2283:26;-1:-1:-1;;2372:1:33;2368:14;;;2384:3;2364:24;2360:37;2356:42;2341:58;2326:74;;2213:201;-1:-1:-1;;;;;2460:1:33;2444:14;;;2440:22;2427:36;;-1:-1:-1;1378:1352:33:o;:::-;268:1019:31;;;;;;",
    linkReferences: {},
  },
  deployedBytecode: {
    object:
      "0x6080604052600436106101145760003560e01c8063715018a6116100a0578063c87b56dd11610064578063c87b56dd146102f3578063ddca3f4314610313578063e522538114610329578063e985e9c51461033e578063f2fde38b1461038757600080fd5b8063715018a61461026b5780638da5cb5b1461028057806395d89b411461029e578063a22cb465146102b3578063b88d4fde146102d357600080fd5b806323b872dd116100e757806323b872dd146101ca57806342842e0e146101ea578063595c49151461020a5780636352211e1461022b57806370a082311461024b57600080fd5b806301ffc9a71461011957806306fdde031461014e578063081812fc14610170578063095ea7b3146101a8575b600080fd5b34801561012557600080fd5b506101396101343660046113ea565b6103a7565b60405190151581526020015b60405180910390f35b34801561015a57600080fd5b506101636103f9565b6040516101459190611457565b34801561017c57600080fd5b5061019061018b36600461146a565b61048b565b6040516001600160a01b039091168152602001610145565b3480156101b457600080fd5b506101c86101c336600461149f565b6104b2565b005b3480156101d657600080fd5b506101c86101e53660046114c9565b6105cc565b3480156101f657600080fd5b506101c86102053660046114c9565b6105fd565b61021d610218366004611591565b610618565b604051908152602001610145565b34801561023757600080fd5b5061019061024636600461146a565b6106b3565b34801561025757600080fd5b5061021d6102663660046115f3565b610713565b34801561027757600080fd5b506101c8610799565b34801561028c57600080fd5b506007546001600160a01b0316610190565b3480156102aa57600080fd5b506101636107ad565b3480156102bf57600080fd5b506101c86102ce36600461160e565b6107bc565b3480156102df57600080fd5b506101c86102ee36600461164a565b6107cb565b3480156102ff57600080fd5b5061016361030e36600461146a565b610803565b34801561031f57600080fd5b5061021d60085481565b34801561033557600080fd5b506101c8610913565b34801561034a57600080fd5b506101396103593660046116c6565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b34801561039357600080fd5b506101c86103a23660046115f3565b61095f565b60006001600160e01b031982166380ac58cd60e01b14806103d857506001600160e01b03198216635b5e139f60e01b145b806103f357506301ffc9a760e01b6001600160e01b03198316145b92915050565b606060008054610408906116f9565b80601f0160208091040260200160405190810160405280929190818152602001828054610434906116f9565b80156104815780601f1061045657610100808354040283529160200191610481565b820191906000526020600020905b81548152906001019060200180831161046457829003601f168201915b5050505050905090565b6000610496826109d8565b506000908152600460205260409020546001600160a01b031690565b60006104bd826106b3565b9050806001600160a01b0316836001600160a01b03160361052f5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b038216148061054b575061054b8133610359565b6105bd5760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c0000006064820152608401610526565b6105c78383610a37565b505050565b6105d63382610aa5565b6105f25760405162461bcd60e51b815260040161052690611733565b6105c7838383610b23565b6105c7838383604051806020016040528060008152506107cb565b600060085434101561067d5760405162461bcd60e51b815260206004820152602860248201527f466565206f6620302e3031206d75737420626520616464656420746f207472616044820152673739b0b1ba34b7b760c11b6064820152608401610526565b600061068860095490565b90506106948482610c94565b61069e8184610e2d565b6106ac600980546001019055565b9392505050565b6000818152600260205260408120546001600160a01b0316806103f35760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610526565b60006001600160a01b03821661077d5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b6064820152608401610526565b506001600160a01b031660009081526003602052604090205490565b6107a1610ec0565b6107ab6000610f1a565b565b606060018054610408906116f9565b6107c7338383610f6c565b5050565b6107d53383610aa5565b6107f15760405162461bcd60e51b815260040161052690611733565b6107fd8484848461103a565b50505050565b606061080e826109d8565b60008281526006602052604081208054610827906116f9565b80601f0160208091040260200160405190810160405280929190818152602001828054610853906116f9565b80156108a05780601f10610875576101008083540402835291602001916108a0565b820191906000526020600020905b81548152906001019060200180831161088357829003601f168201915b5050505050905060006108be60408051602081019091526000815290565b905080516000036108d0575092915050565b8151156109025780826040516020016108ea929190611780565b60405160208183030381529060405292505050919050565b61090b8461106d565b949350505050565b60006109276007546001600160a01b031690565b6040519091506001600160a01b038216904780156108fc02916000818181858888f193505050501580156107c7573d6000803e3d6000fd5b610967610ec0565b6001600160a01b0381166109cc5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610526565b6109d581610f1a565b50565b6000818152600260205260409020546001600160a01b03166109d55760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610526565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610a6c826106b3565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610ab1836106b3565b9050806001600160a01b0316846001600160a01b03161480610af857506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b8061090b5750836001600160a01b0316610b118461048b565b6001600160a01b031614949350505050565b826001600160a01b0316610b36826106b3565b6001600160a01b031614610b5c5760405162461bcd60e51b8152600401610526906117af565b6001600160a01b038216610bbe5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610526565b610bcb83838360016110e0565b826001600160a01b0316610bde826106b3565b6001600160a01b031614610c045760405162461bcd60e51b8152600401610526906117af565b600081815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260038552838620805460001901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6001600160a01b038216610cea5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610526565b6000818152600260205260409020546001600160a01b031615610d4f5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610526565b610d5d6000838360016110e0565b6000818152600260205260409020546001600160a01b031615610dc25760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610526565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6000828152600260205260409020546001600160a01b0316610ea85760405162461bcd60e51b815260206004820152602e60248201527f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60448201526d32bc34b9ba32b73a103a37b5b2b760911b6064820152608401610526565b60008281526006602052604090206105c78282611842565b6007546001600160a01b031633146107ab5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610526565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b031603610fcd5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610526565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b611045848484610b23565b61105184848484611168565b6107fd5760405162461bcd60e51b815260040161052690611902565b6060611078826109d8565b600061108f60408051602081019091526000815290565b905060008151116110af57604051806020016040528060008152506106ac565b806110b984611269565b6040516020016110ca929190611780565b6040516020818303038152906040529392505050565b60018111156107fd576001600160a01b03841615611126576001600160a01b0384166000908152600360205260408120805483929061112090849061196a565b90915550505b6001600160a01b038316156107fd576001600160a01b0383166000908152600360205260408120805483929061115d90849061197d565b909155505050505050565b60006001600160a01b0384163b1561125e57604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906111ac903390899088908890600401611990565b6020604051808303816000875af19250505080156111e7575060408051601f3d908101601f191682019092526111e4918101906119cd565b60015b611244573d808015611215576040519150601f19603f3d011682016040523d82523d6000602084013e61121a565b606091505b50805160000361123c5760405162461bcd60e51b815260040161052690611902565b805181602001fd5b6001600160e01b031916630a85bd0160e11b14905061090b565b506001949350505050565b60606000611276836112fc565b600101905060008167ffffffffffffffff81111561129657611296611505565b6040519080825280601f01601f1916602001820160405280156112c0576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a85049450846112ca57509392505050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b831061133b5772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310611367576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061138557662386f26fc10000830492506010015b6305f5e100831061139d576305f5e100830492506008015b61271083106113b157612710830492506004015b606483106113c3576064830492506002015b600a83106103f35760010192915050565b6001600160e01b0319811681146109d557600080fd5b6000602082840312156113fc57600080fd5b81356106ac816113d4565b60005b8381101561142257818101518382015260200161140a565b50506000910152565b60008151808452611443816020860160208601611407565b601f01601f19169290920160200192915050565b6020815260006106ac602083018461142b565b60006020828403121561147c57600080fd5b5035919050565b80356001600160a01b038116811461149a57600080fd5b919050565b600080604083850312156114b257600080fd5b6114bb83611483565b946020939093013593505050565b6000806000606084860312156114de57600080fd5b6114e784611483565b92506114f560208501611483565b9150604084013590509250925092565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff8084111561153657611536611505565b604051601f8501601f19908116603f0116810190828211818310171561155e5761155e611505565b8160405280935085815286868601111561157757600080fd5b858560208301376000602087830101525050509392505050565b600080604083850312156115a457600080fd5b6115ad83611483565b9150602083013567ffffffffffffffff8111156115c957600080fd5b8301601f810185136115da57600080fd5b6115e98582356020840161151b565b9150509250929050565b60006020828403121561160557600080fd5b6106ac82611483565b6000806040838503121561162157600080fd5b61162a83611483565b91506020830135801515811461163f57600080fd5b809150509250929050565b6000806000806080858703121561166057600080fd5b61166985611483565b935061167760208601611483565b925060408501359150606085013567ffffffffffffffff81111561169a57600080fd5b8501601f810187136116ab57600080fd5b6116ba8782356020840161151b565b91505092959194509250565b600080604083850312156116d957600080fd5b6116e283611483565b91506116f060208401611483565b90509250929050565b600181811c9082168061170d57607f821691505b60208210810361172d57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b60008351611792818460208801611407565b8351908301906117a6818360208801611407565b01949350505050565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b601f8211156105c757600081815260208120601f850160051c8101602086101561181b5750805b601f850160051c820191505b8181101561183a57828155600101611827565b505050505050565b815167ffffffffffffffff81111561185c5761185c611505565b6118708161186a84546116f9565b846117f4565b602080601f8311600181146118a5576000841561188d5750858301515b600019600386901b1c1916600185901b17855561183a565b600085815260208120601f198616915b828110156118d4578886015182559484019460019091019084016118b5565b50858210156118f25787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b818103818111156103f3576103f3611954565b808201808211156103f3576103f3611954565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906119c39083018461142b565b9695505050505050565b6000602082840312156119df57600080fd5b81516106ac816113d456fea264697066735822122047e1019ce0f0cc93c500866db7d6a699f95c60874c6a00fc654e29e9c2d33a0364736f6c63430008110033",
    sourceMap:
      "268:1019:31:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1570:300:17;;;;;;;;;;-1:-1:-1;1570:300:17;;;;;:::i;:::-;;:::i;:::-;;;565:14:33;;558:22;540:41;;528:2;513:18;1570:300:17;;;;;;;;2471:98;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;3935:167::-;;;;;;;;;;-1:-1:-1;3935:167:17;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1697:32:33;;;1679:51;;1667:2;1652:18;3935:167:17;1533:203:33;3468:406:17;;;;;;;;;;-1:-1:-1;3468:406:17;;;;;:::i;:::-;;:::i;:::-;;4612:326;;;;;;;;;;-1:-1:-1;4612:326:17;;;;;:::i;:::-;;:::i;5004:179::-;;;;;;;;;;-1:-1:-1;5004:179:17;;;;;:::i;:::-;;:::i;656:352:31:-;;;;;;:::i;:::-;;:::i;:::-;;;3956:25:33;;;3944:2;3929:18;656:352:31;3810:177:33;2190:219:17;;;;;;;;;;-1:-1:-1;2190:219:17;;;;;:::i;:::-;;:::i;1929:204::-;;;;;;;;;;-1:-1:-1;1929:204:17;;;;;:::i;:::-;;:::i;1831:101:16:-;;;;;;;;;;;;;:::i;1201:85::-;;;;;;;;;;-1:-1:-1;1273:6:16;;-1:-1:-1;;;;;1273:6:16;1201:85;;2633:102:17;;;;;;;;;;;;;:::i;4169:153::-;;;;;;;;;;-1:-1:-1;4169:153:17;;;;;:::i;:::-;;:::i;5249:314::-;;;;;;;;;;-1:-1:-1;5249:314:17;;;;;:::i;:::-;;:::i;482:608:20:-;;;;;;;;;;-1:-1:-1;482:608:20;;;;;:::i;:::-;;:::i;377:36:31:-;;;;;;;;;;;;;;;;1151:134;;;;;;;;;;;;;:::i;4388:162:17:-;;;;;;;;;;-1:-1:-1;4388:162:17;;;;;:::i;:::-;-1:-1:-1;;;;;4508:25:17;;;4485:4;4508:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;4388:162;2081:198:16;;;;;;;;;;-1:-1:-1;2081:198:16;;;;;:::i;:::-;;:::i;1570:300:17:-;1672:4;-1:-1:-1;;;;;;1707:40:17;;-1:-1:-1;;;1707:40:17;;:104;;-1:-1:-1;;;;;;;1763:48:17;;-1:-1:-1;;;1763:48:17;1707:104;:156;;;-1:-1:-1;;;;;;;;;;937:40:26;;;1827:36:17;1688:175;1570:300;-1:-1:-1;;1570:300:17:o;2471:98::-;2525:13;2557:5;2550:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2471:98;:::o;3935:167::-;4011:7;4030:23;4045:7;4030:14;:23::i;:::-;-1:-1:-1;4071:24:17;;;;:15;:24;;;;;;-1:-1:-1;;;;;4071:24:17;;3935:167::o;3468:406::-;3548:13;3564:23;3579:7;3564:14;:23::i;:::-;3548:39;;3611:5;-1:-1:-1;;;;;3605:11:17;:2;-1:-1:-1;;;;;3605:11:17;;3597:57;;;;-1:-1:-1;;;3597:57:17;;6059:2:33;3597:57:17;;;6041:21:33;6098:2;6078:18;;;6071:30;6137:34;6117:18;;;6110:62;-1:-1:-1;;;6188:18:33;;;6181:31;6229:19;;3597:57:17;;;;;;;;;719:10:23;-1:-1:-1;;;;;3686:21:17;;;;:62;;-1:-1:-1;3711:37:17;3728:5;719:10:23;4388:162:17;:::i;3711:37::-;3665:170;;;;-1:-1:-1;;;3665:170:17;;6461:2:33;3665:170:17;;;6443:21:33;6500:2;6480:18;;;6473:30;6539:34;6519:18;;;6512:62;6610:31;6590:18;;;6583:59;6659:19;;3665:170:17;6259:425:33;3665:170:17;3846:21;3855:2;3859:7;3846:8;:21::i;:::-;3538:336;3468:406;;:::o;4612:326::-;4801:41;719:10:23;4834:7:17;4801:18;:41::i;:::-;4793:99;;;;-1:-1:-1;;;4793:99:17;;;;;;;:::i;:::-;4903:28;4913:4;4919:2;4923:7;4903:9;:28::i;5004:179::-;5137:39;5154:4;5160:2;5164:7;5137:39;;;;;;;;;;;;:16;:39::i;656:352:31:-;743:7;783:3;;770:9;:16;;762:69;;;;-1:-1:-1;;;762:69:31;;7305:2:33;762:69:31;;;7287:21:33;7344:2;7324:18;;;7317:30;7383:34;7363:18;;;7356:62;-1:-1:-1;;;7434:18:33;;;7427:38;7482:19;;762:69:31;7103:404:33;762:69:31;841:13;857:19;:9;918:14:24;;827:112;857:19:31;841:35;;886:23;892:9;903:5;886;:23::i;:::-;919:29;932:5;939:8;919:12;:29::i;:::-;958:21;:9;1032:19:24;;1050:1;1032:19;;;945:123;958:21:31;996:5;656:352;-1:-1:-1;;;656:352:31:o;2190:219:17:-;2262:7;6930:16;;;:7;:16;;;;;;-1:-1:-1;;;;;6930:16:17;;2324:56;;;;-1:-1:-1;;;2324:56:17;;7714:2:33;2324:56:17;;;7696:21:33;7753:2;7733:18;;;7726:30;-1:-1:-1;;;7772:18:33;;;7765:54;7836:18;;2324:56:17;7512:348:33;1929:204:17;2001:7;-1:-1:-1;;;;;2028:19:17;;2020:73;;;;-1:-1:-1;;;2020:73:17;;8067:2:33;2020:73:17;;;8049:21:33;8106:2;8086:18;;;8079:30;8145:34;8125:18;;;8118:62;-1:-1:-1;;;8196:18:33;;;8189:39;8245:19;;2020:73:17;7865:405:33;2020:73:17;-1:-1:-1;;;;;;2110:16:17;;;;;:9;:16;;;;;;;1929:204::o;1831:101:16:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;2633:102:17:-;2689:13;2721:7;2714:14;;;;;:::i;4169:153::-;4263:52;719:10:23;4296:8:17;4306;4263:18;:52::i;:::-;4169:153;;:::o;5249:314::-;5417:41;719:10:23;5450:7:17;5417:18;:41::i;:::-;5409:99;;;;-1:-1:-1;;;5409:99:17;;;;;;;:::i;:::-;5518:38;5532:4;5538:2;5542:7;5551:4;5518:13;:38::i;:::-;5249:314;;;;:::o;482:608:20:-;555:13;580:23;595:7;580:14;:23::i;:::-;614;640:19;;;:10;:19;;;;;614:45;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;669:18;690:10;3395:9:17;;;;;;;;;-1:-1:-1;3395:9:17;;;3319:92;690:10:20;669:31;;779:4;773:18;795:1;773:23;769:70;;-1:-1:-1;819:9:20;482:608;-1:-1:-1;;482:608:20:o;769:70::-;941:23;;:27;937:106;;1015:4;1021:9;998:33;;;;;;;;;:::i;:::-;;;;;;;;;;;;;984:48;;;;482:608;;;:::o;937:106::-;1060:23;1075:7;1060:14;:23::i;:::-;1053:30;482:608;-1:-1:-1;;;;482:608:20:o;1151:134:31:-;1189:22;1222:7;1273:6:16;;-1:-1:-1;;;;;1273:6:16;;1201:85;1222:7:31;1240:38;;1189:41;;-1:-1:-1;;;;;;1240:15:31;;;1256:21;1240:38;;;;;;;;;1256:21;1240:15;:38;;;;;;;;;;;;;;;;;;;2081:198:16;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:16;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:16;;8978:2:33;2161:73:16::1;::::0;::::1;8960:21:33::0;9017:2;8997:18;;;8990:30;9056:34;9036:18;;;9029:62;-1:-1:-1;;;9107:18:33;;;9100:36;9153:19;;2161:73:16::1;8776:402:33::0;2161:73:16::1;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;13466:133:17:-;7321:4;6930:16;;;:7;:16;;;;;;-1:-1:-1;;;;;6930:16:17;13539:53;;;;-1:-1:-1;;;13539:53:17;;7714:2:33;13539:53:17;;;7696:21:33;7753:2;7733:18;;;7726:30;-1:-1:-1;;;7772:18:33;;;7765:54;7836:18;;13539:53:17;7512:348:33;12768:171:17;12842:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;12842:29:17;-1:-1:-1;;;;;12842:29:17;;;;;;;;:24;;12895:23;12842:24;12895:14;:23::i;:::-;-1:-1:-1;;;;;12886:46:17;;;;;;;;;;;12768:171;;:::o;7540:261::-;7633:4;7649:13;7665:23;7680:7;7665:14;:23::i;:::-;7649:39;;7717:5;-1:-1:-1;;;;;7706:16:17;:7;-1:-1:-1;;;;;7706:16:17;;:52;;;-1:-1:-1;;;;;;4508:25:17;;;4485:4;4508:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;7726:32;7706:87;;;;7786:7;-1:-1:-1;;;;;7762:31:17;:20;7774:7;7762:11;:20::i;:::-;-1:-1:-1;;;;;7762:31:17;;7698:96;7540:261;-1:-1:-1;;;;7540:261:17:o;11423:1233::-;11577:4;-1:-1:-1;;;;;11550:31:17;:23;11565:7;11550:14;:23::i;:::-;-1:-1:-1;;;;;11550:31:17;;11542:81;;;;-1:-1:-1;;;11542:81:17;;;;;;;:::i;:::-;-1:-1:-1;;;;;11641:16:17;;11633:65;;;;-1:-1:-1;;;11633:65:17;;9791:2:33;11633:65:17;;;9773:21:33;9830:2;9810:18;;;9803:30;9869:34;9849:18;;;9842:62;-1:-1:-1;;;9920:18:33;;;9913:34;9964:19;;11633:65:17;9589:400:33;11633:65:17;11709:42;11730:4;11736:2;11740:7;11749:1;11709:20;:42::i;:::-;11878:4;-1:-1:-1;;;;;11851:31:17;:23;11866:7;11851:14;:23::i;:::-;-1:-1:-1;;;;;11851:31:17;;11843:81;;;;-1:-1:-1;;;11843:81:17;;;;;;;:::i;:::-;11993:24;;;;:15;:24;;;;;;;;11986:31;;-1:-1:-1;;;;;;11986:31:17;;;;;;-1:-1:-1;;;;;12461:15:17;;;;;;:9;:15;;;;;:20;;-1:-1:-1;;12461:20:17;;;12495:13;;;;;;;;;:18;;11986:31;12495:18;;;12533:16;;;:7;:16;;;;;;:21;;;;;;;;;;12570:27;;12009:7;;12570:27;;;3538:336;3468:406;;:::o;9091:920::-;-1:-1:-1;;;;;9170:16:17;;9162:61;;;;-1:-1:-1;;;9162:61:17;;10196:2:33;9162:61:17;;;10178:21:33;;;10215:18;;;10208:30;10274:34;10254:18;;;10247:62;10326:18;;9162:61:17;9994:356:33;9162:61:17;7321:4;6930:16;;;:7;:16;;;;;;-1:-1:-1;;;;;6930:16:17;7344:31;9233:58;;;;-1:-1:-1;;;9233:58:17;;10557:2:33;9233:58:17;;;10539:21:33;10596:2;10576:18;;;10569:30;10635;10615:18;;;10608:58;10683:18;;9233:58:17;10355:352:33;9233:58:17;9302:48;9331:1;9335:2;9339:7;9348:1;9302:20;:48::i;:::-;7321:4;6930:16;;;:7;:16;;;;;;-1:-1:-1;;;;;6930:16:17;7344:31;9437:58;;;;-1:-1:-1;;;9437:58:17;;10557:2:33;9437:58:17;;;10539:21:33;10596:2;10576:18;;;10569:30;10635;10615:18;;;10608:58;10683:18;;9437:58:17;10355:352:33;9437:58:17;-1:-1:-1;;;;;9837:13:17;;;;;;:9;:13;;;;;;;;:18;;9854:1;9837:18;;;9876:16;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;9876:21:17;;;;;9913:33;9884:7;;9837:13;;9913:33;;9837:13;;9913:33;4169:153;;:::o;1237:214:20:-;7321:4:17;6930:16;;;:7;:16;;;;;;-1:-1:-1;;;;;6930:16:17;1328:75:20;;;;-1:-1:-1;;;1328:75:20;;10914:2:33;1328:75:20;;;10896:21:33;10953:2;10933:18;;;10926:30;10992:34;10972:18;;;10965:62;-1:-1:-1;;;11043:18:33;;;11036:44;11097:19;;1328:75:20;10712:410:33;1328:75:20;1413:19;;;;:10;:19;;;;;:31;1435:9;1413:19;:31;:::i;1359:130:16:-;1273:6;;-1:-1:-1;;;;;1273:6:16;719:10:23;1422:23:16;1414:68;;;;-1:-1:-1;;;1414:68:16;;13533:2:33;1414:68:16;;;13515:21:33;;;13552:18;;;13545:30;13611:34;13591:18;;;13584:62;13663:18;;1414:68:16;13331:356:33;2433:187:16;2525:6;;;-1:-1:-1;;;;;2541:17:16;;;-1:-1:-1;;;;;;2541:17:16;;;;;;;2573:40;;2525:6;;;2541:17;2525:6;;2573:40;;2506:16;;2573:40;2496:124;2433:187;:::o;13075:307:17:-;13225:8;-1:-1:-1;;;;;13216:17:17;:5;-1:-1:-1;;;;;13216:17:17;;13208:55;;;;-1:-1:-1;;;13208:55:17;;13894:2:33;13208:55:17;;;13876:21:33;13933:2;13913:18;;;13906:30;13972:27;13952:18;;;13945:55;14017:18;;13208:55:17;13692:349:33;13208:55:17;-1:-1:-1;;;;;13273:25:17;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;13273:46:17;;;;;;;;;;13334:41;;540::33;;;13334::17;;513:18:33;13334:41:17;;;;;;;13075:307;;;:::o;6424:305::-;6574:28;6584:4;6590:2;6594:7;6574:9;:28::i;:::-;6620:47;6643:4;6649:2;6653:7;6662:4;6620:22;:47::i;:::-;6612:110;;;;-1:-1:-1;;;6612:110:17;;;;;;;:::i;2801:276::-;2874:13;2899:23;2914:7;2899:14;:23::i;:::-;2933:21;2957:10;3395:9;;;;;;;;;-1:-1:-1;3395:9:17;;;3319:92;2957:10;2933:34;;3008:1;2990:7;2984:21;:25;:86;;;;;;;;;;;;;;;;;3036:7;3045:18;:7;:16;:18::i;:::-;3019:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2977:93;2801:276;-1:-1:-1;;;2801:276:17:o;15698:396::-;15882:1;15870:9;:13;15866:222;;;-1:-1:-1;;;;;15903:18:17;;;15899:85;;-1:-1:-1;;;;;15941:15:17;;;;;;:9;:15;;;;;:28;;15960:9;;15941:15;:28;;15960:9;;15941:28;:::i;:::-;;;;-1:-1:-1;;15899:85:17;-1:-1:-1;;;;;16001:16:17;;;15997:81;;-1:-1:-1;;;;;16037:13:17;;;;;;:9;:13;;;;;:26;;16054:9;;16037:13;:26;;16054:9;;16037:26;:::i;:::-;;;;-1:-1:-1;;15698:396:17;;;;:::o;14151:831::-;14300:4;-1:-1:-1;;;;;14320:13:17;;1465:19:22;:23;14316:660:17;;14355:71;;-1:-1:-1;;;14355:71:17;;-1:-1:-1;;;;;14355:36:17;;;;;:71;;719:10:23;;14406:4:17;;14412:7;;14421:4;;14355:71;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14355:71:17;;;;;;;;-1:-1:-1;;14355:71:17;;;;;;;;;;;;:::i;:::-;;;14351:573;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14593:6;:13;14610:1;14593:18;14589:321;;14635:60;;-1:-1:-1;;;14635:60:17;;;;;;;:::i;14589:321::-;14862:6;14856:13;14847:6;14843:2;14839:15;14832:38;14351:573;-1:-1:-1;;;;;;14476:51:17;-1:-1:-1;;;14476:51:17;;-1:-1:-1;14469:58:17;;14316:660;-1:-1:-1;14961:4:17;14151:831;;;;;;:::o;415:696:25:-;471:13;520:14;537:17;548:5;537:10;:17::i;:::-;557:1;537:21;520:38;;572:20;606:6;595:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;595:18:25;-1:-1:-1;572:41:25;-1:-1:-1;733:28:25;;;749:2;733:28;788:280;-1:-1:-1;;819:5:25;-1:-1:-1;;;953:2:25;942:14;;937:30;819:5;924:44;1012:2;1003:11;;;-1:-1:-1;1032:21:25;788:280;1032:21;-1:-1:-1;1088:6:25;415:696;-1:-1:-1;;;415:696:25:o;9889:890:28:-;9942:7;;-1:-1:-1;;;10017:15:28;;10013:99;;-1:-1:-1;;;10052:15:28;;;-1:-1:-1;10095:2:28;10085:12;10013:99;10138:6;10129:5;:15;10125:99;;10173:6;10164:15;;;-1:-1:-1;10207:2:28;10197:12;10125:99;10250:6;10241:5;:15;10237:99;;10285:6;10276:15;;;-1:-1:-1;10319:2:28;10309:12;10237:99;10362:5;10353;:14;10349:96;;10396:5;10387:14;;;-1:-1:-1;10429:1:28;10419:11;10349:96;10471:5;10462;:14;10458:96;;10505:5;10496:14;;;-1:-1:-1;10538:1:28;10528:11;10458:96;10580:5;10571;:14;10567:96;;10614:5;10605:14;;;-1:-1:-1;10647:1:28;10637:11;10567:96;10689:5;10680;:14;10676:64;;10724:1;10714:11;10766:6;9889:890;-1:-1:-1;;9889:890:28:o;14:131:33:-;-1:-1:-1;;;;;;88:32:33;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:250::-;677:1;687:113;701:6;698:1;695:13;687:113;;;777:11;;;771:18;758:11;;;751:39;723:2;716:10;687:113;;;-1:-1:-1;;834:1:33;816:16;;809:27;592:250::o;847:271::-;889:3;927:5;921:12;954:6;949:3;942:19;970:76;1039:6;1032:4;1027:3;1023:14;1016:4;1009:5;1005:16;970:76;:::i;:::-;1100:2;1079:15;-1:-1:-1;;1075:29:33;1066:39;;;;1107:4;1062:50;;847:271;-1:-1:-1;;847:271:33:o;1123:220::-;1272:2;1261:9;1254:21;1235:4;1292:45;1333:2;1322:9;1318:18;1310:6;1292:45;:::i;1348:180::-;1407:6;1460:2;1448:9;1439:7;1435:23;1431:32;1428:52;;;1476:1;1473;1466:12;1428:52;-1:-1:-1;1499:23:33;;1348:180;-1:-1:-1;1348:180:33:o;1741:173::-;1809:20;;-1:-1:-1;;;;;1858:31:33;;1848:42;;1838:70;;1904:1;1901;1894:12;1838:70;1741:173;;;:::o;1919:254::-;1987:6;1995;2048:2;2036:9;2027:7;2023:23;2019:32;2016:52;;;2064:1;2061;2054:12;2016:52;2087:29;2106:9;2087:29;:::i;:::-;2077:39;2163:2;2148:18;;;;2135:32;;-1:-1:-1;;;1919:254:33:o;2178:328::-;2255:6;2263;2271;2324:2;2312:9;2303:7;2299:23;2295:32;2292:52;;;2340:1;2337;2330:12;2292:52;2363:29;2382:9;2363:29;:::i;:::-;2353:39;;2411:38;2445:2;2434:9;2430:18;2411:38;:::i;:::-;2401:48;;2496:2;2485:9;2481:18;2468:32;2458:42;;2178:328;;;;;:::o;2511:127::-;2572:10;2567:3;2563:20;2560:1;2553:31;2603:4;2600:1;2593:15;2627:4;2624:1;2617:15;2643:632;2708:5;2738:18;2779:2;2771:6;2768:14;2765:40;;;2785:18;;:::i;:::-;2860:2;2854:9;2828:2;2914:15;;-1:-1:-1;;2910:24:33;;;2936:2;2906:33;2902:42;2890:55;;;2960:18;;;2980:22;;;2957:46;2954:72;;;3006:18;;:::i;:::-;3046:10;3042:2;3035:22;3075:6;3066:15;;3105:6;3097;3090:22;3145:3;3136:6;3131:3;3127:16;3124:25;3121:45;;;3162:1;3159;3152:12;3121:45;3212:6;3207:3;3200:4;3192:6;3188:17;3175:44;3267:1;3260:4;3251:6;3243;3239:19;3235:30;3228:41;;;;2643:632;;;;;:::o;3280:525::-;3358:6;3366;3419:2;3407:9;3398:7;3394:23;3390:32;3387:52;;;3435:1;3432;3425:12;3387:52;3458:29;3477:9;3458:29;:::i;:::-;3448:39;;3538:2;3527:9;3523:18;3510:32;3565:18;3557:6;3554:30;3551:50;;;3597:1;3594;3587:12;3551:50;3620:22;;3673:4;3665:13;;3661:27;-1:-1:-1;3651:55:33;;3702:1;3699;3692:12;3651:55;3725:74;3791:7;3786:2;3773:16;3768:2;3764;3760:11;3725:74;:::i;:::-;3715:84;;;3280:525;;;;;:::o;3992:186::-;4051:6;4104:2;4092:9;4083:7;4079:23;4075:32;4072:52;;;4120:1;4117;4110:12;4072:52;4143:29;4162:9;4143:29;:::i;4183:347::-;4248:6;4256;4309:2;4297:9;4288:7;4284:23;4280:32;4277:52;;;4325:1;4322;4315:12;4277:52;4348:29;4367:9;4348:29;:::i;:::-;4338:39;;4427:2;4416:9;4412:18;4399:32;4474:5;4467:13;4460:21;4453:5;4450:32;4440:60;;4496:1;4493;4486:12;4440:60;4519:5;4509:15;;;4183:347;;;;;:::o;4535:667::-;4630:6;4638;4646;4654;4707:3;4695:9;4686:7;4682:23;4678:33;4675:53;;;4724:1;4721;4714:12;4675:53;4747:29;4766:9;4747:29;:::i;:::-;4737:39;;4795:38;4829:2;4818:9;4814:18;4795:38;:::i;:::-;4785:48;;4880:2;4869:9;4865:18;4852:32;4842:42;;4935:2;4924:9;4920:18;4907:32;4962:18;4954:6;4951:30;4948:50;;;4994:1;4991;4984:12;4948:50;5017:22;;5070:4;5062:13;;5058:27;-1:-1:-1;5048:55:33;;5099:1;5096;5089:12;5048:55;5122:74;5188:7;5183:2;5170:16;5165:2;5161;5157:11;5122:74;:::i;:::-;5112:84;;;4535:667;;;;;;;:::o;5207:260::-;5275:6;5283;5336:2;5324:9;5315:7;5311:23;5307:32;5304:52;;;5352:1;5349;5342:12;5304:52;5375:29;5394:9;5375:29;:::i;:::-;5365:39;;5423:38;5457:2;5446:9;5442:18;5423:38;:::i;:::-;5413:48;;5207:260;;;;;:::o;5472:380::-;5551:1;5547:12;;;;5594;;;5615:61;;5669:4;5661:6;5657:17;5647:27;;5615:61;5722:2;5714:6;5711:14;5691:18;5688:38;5685:161;;5768:10;5763:3;5759:20;5756:1;5749:31;5803:4;5800:1;5793:15;5831:4;5828:1;5821:15;5685:161;;5472:380;;;:::o;6689:409::-;6891:2;6873:21;;;6930:2;6910:18;;;6903:30;6969:34;6964:2;6949:18;;6942:62;-1:-1:-1;;;7035:2:33;7020:18;;7013:43;7088:3;7073:19;;6689:409::o;8275:496::-;8454:3;8492:6;8486:13;8508:66;8567:6;8562:3;8555:4;8547:6;8543:17;8508:66;:::i;:::-;8637:13;;8596:16;;;;8659:70;8637:13;8596:16;8706:4;8694:17;;8659:70;:::i;:::-;8745:20;;8275:496;-1:-1:-1;;;;8275:496:33:o;9183:401::-;9385:2;9367:21;;;9424:2;9404:18;;;9397:30;9463:34;9458:2;9443:18;;9436:62;-1:-1:-1;;;9529:2:33;9514:18;;9507:35;9574:3;9559:19;;9183:401::o;11253:545::-;11355:2;11350:3;11347:11;11344:448;;;11391:1;11416:5;11412:2;11405:17;11461:4;11457:2;11447:19;11531:2;11519:10;11515:19;11512:1;11508:27;11502:4;11498:38;11567:4;11555:10;11552:20;11549:47;;;-1:-1:-1;11590:4:33;11549:47;11645:2;11640:3;11636:12;11633:1;11629:20;11623:4;11619:31;11609:41;;11700:82;11718:2;11711:5;11708:13;11700:82;;;11763:17;;;11744:1;11733:13;11700:82;;;11704:3;;;11253:545;;;:::o;11974:1352::-;12100:3;12094:10;12127:18;12119:6;12116:30;12113:56;;;12149:18;;:::i;:::-;12178:97;12268:6;12228:38;12260:4;12254:11;12228:38;:::i;:::-;12222:4;12178:97;:::i;:::-;12330:4;;12394:2;12383:14;;12411:1;12406:663;;;;13113:1;13130:6;13127:89;;;-1:-1:-1;13182:19:33;;;13176:26;13127:89;-1:-1:-1;;11931:1:33;11927:11;;;11923:24;11919:29;11909:40;11955:1;11951:11;;;11906:57;13229:81;;12376:944;;12406:663;11200:1;11193:14;;;11237:4;11224:18;;-1:-1:-1;;12442:20:33;;;12560:236;12574:7;12571:1;12568:14;12560:236;;;12663:19;;;12657:26;12642:42;;12755:27;;;;12723:1;12711:14;;;;12590:19;;12560:236;;;12564:3;12824:6;12815:7;12812:19;12809:201;;;12885:19;;;12879:26;-1:-1:-1;;12968:1:33;12964:14;;;12980:3;12960:24;12956:37;12952:42;12937:58;12922:74;;12809:201;-1:-1:-1;;;;;13056:1:33;13040:14;;;13036:22;13023:36;;-1:-1:-1;11974:1352:33:o;14046:414::-;14248:2;14230:21;;;14287:2;14267:18;;;14260:30;14326:34;14321:2;14306:18;;14299:62;-1:-1:-1;;;14392:2:33;14377:18;;14370:48;14450:3;14435:19;;14046:414::o;14465:127::-;14526:10;14521:3;14517:20;14514:1;14507:31;14557:4;14554:1;14547:15;14581:4;14578:1;14571:15;14597:128;14664:9;;;14685:11;;;14682:37;;;14699:18;;:::i;14730:125::-;14795:9;;;14816:10;;;14813:36;;;14829:18;;:::i;14860:489::-;-1:-1:-1;;;;;15129:15:33;;;15111:34;;15181:15;;15176:2;15161:18;;15154:43;15228:2;15213:18;;15206:34;;;15276:3;15271:2;15256:18;;15249:31;;;15054:4;;15297:46;;15323:19;;15315:6;15297:46;:::i;:::-;15289:54;14860:489;-1:-1:-1;;;;;;14860:489:33:o;15354:249::-;15423:6;15476:2;15464:9;15455:7;15451:23;15447:32;15444:52;;;15492:1;15489;15482:12;15444:52;15524:9;15518:16;15543:30;15567:5;15543:30;:::i",
    linkReferences: {},
  },
  methodIdentifiers: {
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "collect()": "e5225381",
    "fee()": "ddca3f43",
    "getApproved(uint256)": "081812fc",
    "isApprovedForAll(address,address)": "e985e9c5",
    "name()": "06fdde03",
    "owner()": "8da5cb5b",
    "ownerOf(uint256)": "6352211e",
    "printNFT(address,string)": "595c4915",
    "renounceOwnership()": "715018a6",
    "safeTransferFrom(address,address,uint256)": "42842e0e",
    "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
    "setApprovalForAll(address,bool)": "a22cb465",
    "supportsInterface(bytes4)": "01ffc9a7",
    "symbol()": "95d89b41",
    "tokenURI(uint256)": "c87b56dd",
    "transferFrom(address,address,uint256)": "23b872dd",
    "transferOwnership(address)": "f2fde38b",
  },
  rawMetadata:
    '{"compiler":{"version":"0.8.17+commit.8df45f5f"},"language":"Solidity","output":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"collect","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"fee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"string","name":"tokenURI","type":"string"}],"name":"printNFT","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"approve(address,uint256)":{"details":"See {IERC721-approve}."},"balanceOf(address)":{"details":"See {IERC721-balanceOf}."},"collect()":{"details":"`collect` handles the sending of collected fees to the owner account. This can be called by any user."},"getApproved(uint256)":{"details":"See {IERC721-getApproved}."},"isApprovedForAll(address,address)":{"details":"See {IERC721-isApprovedForAll}."},"name()":{"details":"See {IERC721Metadata-name}."},"owner()":{"details":"Returns the address of the current owner."},"ownerOf(uint256)":{"details":"See {IERC721-ownerOf}."},"printNFT(address,string)":{"details":"Mints a token for the provided recipient and sets the provided URI. This requires that a fee amount is sent."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"safeTransferFrom(address,address,uint256)":{"details":"See {IERC721-safeTransferFrom}."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"See {IERC721-safeTransferFrom}."},"setApprovalForAll(address,bool)":{"details":"See {IERC721-setApprovalForAll}."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."},"symbol()":{"details":"See {IERC721Metadata-symbol}."},"tokenURI(uint256)":{"details":"See {IERC721Metadata-tokenURI}."},"transferFrom(address,address,uint256)":{"details":"See {IERC721-transferFrom}."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"compilationTarget":{"src/NFTPrinter.sol":"NFTPrinter"},"evmVersion":"london","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":true,"runs":200},"remappings":[":ds-test/=lib/forge-std/lib/ds-test/src/",":forge-std/=lib/forge-std/src/",":openzeppelin-contracts/=lib/openzeppelin-contracts/"]},"sources":{"lib/openzeppelin-contracts/contracts/access/Ownable.sol":{"keccak256":"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673","license":"MIT","urls":["bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2","dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"]},"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol":{"keccak256":"0xd89f3585b211fc9e3408384a4c4efdc3a93b2f877a3821046fa01c219d35be1b","license":"MIT","urls":["bzz-raw://5ea15ef7c8980240ccd46df13809d163f749bc0a01d8bced1875660d4872da1c","dweb:/ipfs/QmbDfAT9VeCSG4cnPd6tjDMp8ED85dLHbWyMyv7wbmL4CH"]},"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol":{"keccak256":"0x1df3b3815aebb766104415e058dc14f63d7147c62b1bcb152632c70b3a23999d","license":"MIT","urls":["bzz-raw://de8bdc143e344b36c8e975c82f28ef6bd218311e6b04dcda6c0b321812a01a8b","dweb:/ipfs/QmfDDp5q3DTFFcjYFghmomgX1PJ2CrBmDTqvn2brwsJYbS"]},"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol":{"keccak256":"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da","license":"MIT","urls":["bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708","dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV"]},"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721URIStorage.sol":{"keccak256":"0x5c3501c1b70fcfc64417e9da5cc6a3597191baa354781e508e1e14cc0e50a038","license":"MIT","urls":["bzz-raw://899c87a849a94c848818d0afede6961d2c87665af1dd23a5c983e78981a65691","dweb:/ipfs/QmUeFDffQRDmX87FX3MRxN3bmpUxDTWpWLwPJzeAJ3yF6H"]},"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"keccak256":"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9","license":"MIT","urls":["bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146","dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf"]},"lib/openzeppelin-contracts/contracts/utils/Address.sol":{"keccak256":"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1","license":"MIT","urls":["bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269","dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj"]},"lib/openzeppelin-contracts/contracts/utils/Context.sol":{"keccak256":"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7","license":"MIT","urls":["bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92","dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"]},"lib/openzeppelin-contracts/contracts/utils/Counters.sol":{"keccak256":"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1","license":"MIT","urls":["bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee","dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu"]},"lib/openzeppelin-contracts/contracts/utils/Strings.sol":{"keccak256":"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a","license":"MIT","urls":["bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634","dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb"]},"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol":{"keccak256":"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b","license":"MIT","urls":["bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d","dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"]},"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol":{"keccak256":"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1","license":"MIT","urls":["bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f","dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"]},"lib/openzeppelin-contracts/contracts/utils/math/Math.sol":{"keccak256":"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6","license":"MIT","urls":["bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b","dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz"]},"src/INFTPrinter.sol":{"keccak256":"0x36691a2e1eec52d6fa9f0381d08f62c1e96ea185d98ce989e57bc4486e9f3d96","urls":["bzz-raw://cf63e87629e795af080fc0a5aa7ed42cbe5b4ed80fc7985408590c692975f1fe","dweb:/ipfs/QmRZZ6ZbsUcZm9b19tPBgU24sLDNR51CQ4NwZdhUY5iP4S"]},"src/NFTPrinter.sol":{"keccak256":"0xeeab2a9bf694388282ee18d56228a8d2670fdb5b0cd9fbccfdc87f765a6f1bf6","urls":["bzz-raw://82fda84a64ea09e839bf1ddb81823deeb3201dba6ee991eccd613e979113ca39","dweb:/ipfs/QmSwiQNj1FAivBEHvQ2EthuS964oe8nWcWVjTahnmhL1gF"]}},"version":1}',
  metadata: {
    compiler: {
      version: "0.8.17+commit.8df45f5f",
    },
    language: "Solidity",
    output: {
      abi: [
        {
          inputs: [],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
              indexed: true,
            },
            {
              internalType: "address",
              name: "approved",
              type: "address",
              indexed: true,
            },
            {
              internalType: "uint256",
              name: "tokenId",
              type: "uint256",
              indexed: true,
            },
          ],
          type: "event",
          name: "Approval",
          anonymous: false,
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
              indexed: true,
            },
            {
              internalType: "address",
              name: "operator",
              type: "address",
              indexed: true,
            },
            {
              internalType: "bool",
              name: "approved",
              type: "bool",
              indexed: false,
            },
          ],
          type: "event",
          name: "ApprovalForAll",
          anonymous: false,
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "previousOwner",
              type: "address",
              indexed: true,
            },
            {
              internalType: "address",
              name: "newOwner",
              type: "address",
              indexed: true,
            },
          ],
          type: "event",
          name: "OwnershipTransferred",
          anonymous: false,
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "from",
              type: "address",
              indexed: true,
            },
            {
              internalType: "address",
              name: "to",
              type: "address",
              indexed: true,
            },
            {
              internalType: "uint256",
              name: "tokenId",
              type: "uint256",
              indexed: true,
            },
          ],
          type: "event",
          name: "Transfer",
          anonymous: false,
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "tokenId",
              type: "uint256",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
          name: "approve",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
          name: "balanceOf",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
        },
        {
          inputs: [],
          stateMutability: "nonpayable",
          type: "function",
          name: "collect",
        },
        {
          inputs: [],
          stateMutability: "view",
          type: "function",
          name: "fee",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "tokenId",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
          name: "getApproved",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
            {
              internalType: "address",
              name: "operator",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
          name: "isApprovedForAll",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
        },
        {
          inputs: [],
          stateMutability: "view",
          type: "function",
          name: "name",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
        },
        {
          inputs: [],
          stateMutability: "view",
          type: "function",
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "tokenId",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
          name: "ownerOf",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "recipient",
              type: "address",
            },
            {
              internalType: "string",
              name: "tokenURI",
              type: "string",
            },
          ],
          stateMutability: "payable",
          type: "function",
          name: "printNFT",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
        },
        {
          inputs: [],
          stateMutability: "nonpayable",
          type: "function",
          name: "renounceOwnership",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "from",
              type: "address",
            },
            {
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "tokenId",
              type: "uint256",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
          name: "safeTransferFrom",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "from",
              type: "address",
            },
            {
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "tokenId",
              type: "uint256",
            },
            {
              internalType: "bytes",
              name: "data",
              type: "bytes",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
          name: "safeTransferFrom",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "operator",
              type: "address",
            },
            {
              internalType: "bool",
              name: "approved",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
          name: "setApprovalForAll",
        },
        {
          inputs: [
            {
              internalType: "bytes4",
              name: "interfaceId",
              type: "bytes4",
            },
          ],
          stateMutability: "view",
          type: "function",
          name: "supportsInterface",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
        },
        {
          inputs: [],
          stateMutability: "view",
          type: "function",
          name: "symbol",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "tokenId",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
          name: "tokenURI",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "from",
              type: "address",
            },
            {
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "tokenId",
              type: "uint256",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
          name: "transferFrom",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
          name: "transferOwnership",
        },
      ],
      devdoc: {
        kind: "dev",
        methods: {
          "approve(address,uint256)": {
            details: "See {IERC721-approve}.",
          },
          "balanceOf(address)": {
            details: "See {IERC721-balanceOf}.",
          },
          "collect()": {
            details:
              "`collect` handles the sending of collected fees to the owner account. This can be called by any user.",
          },
          "getApproved(uint256)": {
            details: "See {IERC721-getApproved}.",
          },
          "isApprovedForAll(address,address)": {
            details: "See {IERC721-isApprovedForAll}.",
          },
          "name()": {
            details: "See {IERC721Metadata-name}.",
          },
          "owner()": {
            details: "Returns the address of the current owner.",
          },
          "ownerOf(uint256)": {
            details: "See {IERC721-ownerOf}.",
          },
          "printNFT(address,string)": {
            details:
              "Mints a token for the provided recipient and sets the provided URI. This requires that a fee amount is sent.",
          },
          "renounceOwnership()": {
            details:
              "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.",
          },
          "safeTransferFrom(address,address,uint256)": {
            details: "See {IERC721-safeTransferFrom}.",
          },
          "safeTransferFrom(address,address,uint256,bytes)": {
            details: "See {IERC721-safeTransferFrom}.",
          },
          "setApprovalForAll(address,bool)": {
            details: "See {IERC721-setApprovalForAll}.",
          },
          "supportsInterface(bytes4)": {
            details: "See {IERC165-supportsInterface}.",
          },
          "symbol()": {
            details: "See {IERC721Metadata-symbol}.",
          },
          "tokenURI(uint256)": {
            details: "See {IERC721Metadata-tokenURI}.",
          },
          "transferFrom(address,address,uint256)": {
            details: "See {IERC721-transferFrom}.",
          },
          "transferOwnership(address)": {
            details:
              "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.",
          },
        },
        version: 1,
      },
      userdoc: {
        kind: "user",
        methods: {},
        version: 1,
      },
    },
    settings: {
      remappings: [
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
      ],
      optimizer: {
        enabled: true,
        runs: 200,
      },
      metadata: {
        bytecodeHash: "ipfs",
      },
      compilationTarget: {
        "src/NFTPrinter.sol": "NFTPrinter",
      },
      libraries: {},
    },
    sources: {
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        keccak256:
          "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
        urls: [
          "bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
          "dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y",
        ],
        license: "MIT",
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol": {
        keccak256:
          "0xd89f3585b211fc9e3408384a4c4efdc3a93b2f877a3821046fa01c219d35be1b",
        urls: [
          "bzz-raw://5ea15ef7c8980240ccd46df13809d163f749bc0a01d8bced1875660d4872da1c",
          "dweb:/ipfs/QmbDfAT9VeCSG4cnPd6tjDMp8ED85dLHbWyMyv7wbmL4CH",
        ],
        license: "MIT",
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol": {
        keccak256:
          "0x1df3b3815aebb766104415e058dc14f63d7147c62b1bcb152632c70b3a23999d",
        urls: [
          "bzz-raw://de8bdc143e344b36c8e975c82f28ef6bd218311e6b04dcda6c0b321812a01a8b",
          "dweb:/ipfs/QmfDDp5q3DTFFcjYFghmomgX1PJ2CrBmDTqvn2brwsJYbS",
        ],
        license: "MIT",
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol": {
        keccak256:
          "0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da",
        urls: [
          "bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708",
          "dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV",
        ],
        license: "MIT",
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721URIStorage.sol":
        {
          keccak256:
            "0x5c3501c1b70fcfc64417e9da5cc6a3597191baa354781e508e1e14cc0e50a038",
          urls: [
            "bzz-raw://899c87a849a94c848818d0afede6961d2c87665af1dd23a5c983e78981a65691",
            "dweb:/ipfs/QmUeFDffQRDmX87FX3MRxN3bmpUxDTWpWLwPJzeAJ3yF6H",
          ],
          license: "MIT",
        },
      "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol":
        {
          keccak256:
            "0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9",
          urls: [
            "bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146",
            "dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf",
          ],
          license: "MIT",
        },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        keccak256:
          "0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1",
        urls: [
          "bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269",
          "dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj",
        ],
        license: "MIT",
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        keccak256:
          "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        urls: [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3",
        ],
        license: "MIT",
      },
      "lib/openzeppelin-contracts/contracts/utils/Counters.sol": {
        keccak256:
          "0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1",
        urls: [
          "bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee",
          "dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu",
        ],
        license: "MIT",
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        keccak256:
          "0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a",
        urls: [
          "bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634",
          "dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb",
        ],
        license: "MIT",
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
        keccak256:
          "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        urls: [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43",
        ],
        license: "MIT",
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        keccak256:
          "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        urls: [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy",
        ],
        license: "MIT",
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        keccak256:
          "0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6",
        urls: [
          "bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b",
          "dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz",
        ],
        license: "MIT",
      },
      "src/INFTPrinter.sol": {
        keccak256:
          "0x36691a2e1eec52d6fa9f0381d08f62c1e96ea185d98ce989e57bc4486e9f3d96",
        urls: [
          "bzz-raw://cf63e87629e795af080fc0a5aa7ed42cbe5b4ed80fc7985408590c692975f1fe",
          "dweb:/ipfs/QmRZZ6ZbsUcZm9b19tPBgU24sLDNR51CQ4NwZdhUY5iP4S",
        ],
        license: null,
      },
      "src/NFTPrinter.sol": {
        keccak256:
          "0xeeab2a9bf694388282ee18d56228a8d2670fdb5b0cd9fbccfdc87f765a6f1bf6",
        urls: [
          "bzz-raw://82fda84a64ea09e839bf1ddb81823deeb3201dba6ee991eccd613e979113ca39",
          "dweb:/ipfs/QmSwiQNj1FAivBEHvQ2EthuS964oe8nWcWVjTahnmhL1gF",
        ],
        license: null,
      },
    },
    version: 1,
  },
  ast: {
    absolutePath: "src/NFTPrinter.sol",
    id: 29501,
    exportedSymbols: {
      Address: [28177],
      Context: [28199],
      Counters: [28273],
      ERC165: [28472],
      ERC721: [27561],
      ERC721URIStorage: [27820],
      IERC165: [28484],
      IERC721: [27677],
      IERC721Metadata: [27847],
      IERC721Receiver: [27695],
      INFTPrinter: [29404],
      Math: [29349],
      NFTPrinter: [29500],
      Ownable: [26616],
      Strings: [28448],
    },
    nodeType: "SourceUnit",
    src: "0:1288:31",
    nodes: [
      {
        id: 29406,
        nodeType: "PragmaDirective",
        src: "0:23:31",
        nodes: [],
        literals: ["solidity", "^", "0.8", ".0"],
      },
      {
        id: 29407,
        nodeType: "ImportDirective",
        src: "25:61:31",
        nodes: [],
        absolutePath: "lib/openzeppelin-contracts/contracts/utils/Counters.sol",
        file: "openzeppelin-contracts/contracts/utils/Counters.sol",
        nameLocation: "-1:-1:-1",
        scope: 29501,
        sourceUnit: 28274,
        symbolAliases: [],
        unitAlias: "",
      },
      {
        id: 29408,
        nodeType: "ImportDirective",
        src: "87:87:31",
        nodes: [],
        absolutePath:
          "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
        file: "openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
        nameLocation: "-1:-1:-1",
        scope: 29501,
        sourceUnit: 27821,
        symbolAliases: [],
        unitAlias: "",
      },
      {
        id: 29409,
        nodeType: "ImportDirective",
        src: "175:61:31",
        nodes: [],
        absolutePath: "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        file: "openzeppelin-contracts/contracts/access/Ownable.sol",
        nameLocation: "-1:-1:-1",
        scope: 29501,
        sourceUnit: 26617,
        symbolAliases: [],
        unitAlias: "",
      },
      {
        id: 29410,
        nodeType: "ImportDirective",
        src: "238:27:31",
        nodes: [],
        absolutePath: "src/INFTPrinter.sol",
        file: "./INFTPrinter.sol",
        nameLocation: "-1:-1:-1",
        scope: 29501,
        sourceUnit: 29405,
        symbolAliases: [],
        unitAlias: "",
      },
      {
        id: 29500,
        nodeType: "ContractDefinition",
        src: "268:1019:31",
        nodes: [
          {
            id: 29420,
            nodeType: "UsingForDirective",
            src: "336:36:31",
            nodes: [],
            global: false,
            libraryName: {
              id: 29417,
              name: "Counters",
              nameLocations: ["342:8:31"],
              nodeType: "IdentifierPath",
              referencedDeclaration: 28273,
              src: "342:8:31",
            },
            typeName: {
              id: 29419,
              nodeType: "UserDefinedTypeName",
              pathNode: {
                id: 29418,
                name: "Counters.Counter",
                nameLocations: ["355:8:31", "364:7:31"],
                nodeType: "IdentifierPath",
                referencedDeclaration: 28205,
                src: "355:16:31",
              },
              referencedDeclaration: 28205,
              src: "355:16:31",
              typeDescriptions: {
                typeIdentifier: "t_struct$_Counter_$28205_storage_ptr",
                typeString: "struct Counters.Counter",
              },
            },
          },
          {
            id: 29423,
            nodeType: "VariableDeclaration",
            src: "377:36:31",
            nodes: [],
            constant: false,
            functionSelector: "ddca3f43",
            mutability: "mutable",
            name: "fee",
            nameLocation: "392:3:31",
            scope: 29500,
            stateVariable: true,
            storageLocation: "default",
            typeDescriptions: {
              typeIdentifier: "t_uint256",
              typeString: "uint256",
            },
            typeName: {
              id: 29421,
              name: "uint256",
              nodeType: "ElementaryTypeName",
              src: "377:7:31",
              typeDescriptions: {
                typeIdentifier: "t_uint256",
                typeString: "uint256",
              },
            },
            value: {
              hexValue: "31305f3030305f303030",
              id: 29422,
              isConstant: false,
              isLValue: false,
              isPure: true,
              kind: "number",
              lValueRequested: false,
              nodeType: "Literal",
              src: "398:15:31",
              subdenomination: "gwei",
              typeDescriptions: {
                typeIdentifier: "t_rational_10000000000000000_by_1",
                typeString: "int_const 10000000000000000",
              },
              value: "10_000_000",
            },
            visibility: "public",
          },
          {
            id: 29426,
            nodeType: "VariableDeclaration",
            src: "420:34:31",
            nodes: [],
            constant: false,
            mutability: "mutable",
            name: "_tokenIds",
            nameLocation: "445:9:31",
            scope: 29500,
            stateVariable: true,
            storageLocation: "default",
            typeDescriptions: {
              typeIdentifier: "t_struct$_Counter_$28205_storage",
              typeString: "struct Counters.Counter",
            },
            typeName: {
              id: 29425,
              nodeType: "UserDefinedTypeName",
              pathNode: {
                id: 29424,
                name: "Counters.Counter",
                nameLocations: ["420:8:31", "429:7:31"],
                nodeType: "IdentifierPath",
                referencedDeclaration: 28205,
                src: "420:16:31",
              },
              referencedDeclaration: 28205,
              src: "420:16:31",
              typeDescriptions: {
                typeIdentifier: "t_struct$_Counter_$28205_storage_ptr",
                typeString: "struct Counters.Counter",
              },
            },
            visibility: "private",
          },
          {
            id: 29434,
            nodeType: "FunctionDefinition",
            src: "461:45:31",
            nodes: [],
            body: {
              id: 29433,
              nodeType: "Block",
              src: "504:2:31",
              nodes: [],
              statements: [],
            },
            implemented: true,
            kind: "constructor",
            modifiers: [
              {
                arguments: [
                  {
                    hexValue: "636c69636b6e6d696e74",
                    id: 29429,
                    isConstant: false,
                    isLValue: false,
                    isPure: true,
                    kind: "string",
                    lValueRequested: false,
                    nodeType: "Literal",
                    src: "482:12:31",
                    typeDescriptions: {
                      typeIdentifier:
                        "t_stringliteral_8a2d3081298a602b4a5cd686c7271efa4d5101654676b5ea10a86d0eb87b5809",
                      typeString: 'literal_string "clicknmint"',
                    },
                    value: "clicknmint",
                  },
                  {
                    hexValue: "434c4d54",
                    id: 29430,
                    isConstant: false,
                    isLValue: false,
                    isPure: true,
                    kind: "string",
                    lValueRequested: false,
                    nodeType: "Literal",
                    src: "496:6:31",
                    typeDescriptions: {
                      typeIdentifier:
                        "t_stringliteral_b49b212be0aff2ee4b4f3a62efafb8f048d756f3fc115c245c4ac41247547b31",
                      typeString: 'literal_string "CLMT"',
                    },
                    value: "CLMT",
                  },
                ],
                id: 29431,
                kind: "baseConstructorSpecifier",
                modifierName: {
                  id: 29428,
                  name: "ERC721",
                  nameLocations: ["475:6:31"],
                  nodeType: "IdentifierPath",
                  referencedDeclaration: 27561,
                  src: "475:6:31",
                },
                nodeType: "ModifierInvocation",
                src: "475:28:31",
              },
            ],
            name: "",
            nameLocation: "-1:-1:-1",
            parameters: {
              id: 29427,
              nodeType: "ParameterList",
              parameters: [],
              src: "472:2:31",
            },
            returnParameters: {
              id: 29432,
              nodeType: "ParameterList",
              parameters: [],
              src: "504:0:31",
            },
            scope: 29500,
            stateMutability: "nonpayable",
            virtual: false,
            visibility: "public",
          },
          {
            id: 29476,
            nodeType: "FunctionDefinition",
            src: "656:352:31",
            nodes: [],
            body: {
              id: 29475,
              nodeType: "Block",
              src: "752:256:31",
              nodes: [],
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        commonType: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                        id: 29448,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        lValueRequested: false,
                        leftExpression: {
                          expression: {
                            id: 29445,
                            name: "msg",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: -15,
                            src: "770:3:31",
                            typeDescriptions: {
                              typeIdentifier: "t_magic_message",
                              typeString: "msg",
                            },
                          },
                          id: 29446,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          memberLocation: "774:5:31",
                          memberName: "value",
                          nodeType: "MemberAccess",
                          src: "770:9:31",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        nodeType: "BinaryOperation",
                        operator: ">=",
                        rightExpression: {
                          id: 29447,
                          name: "fee",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 29423,
                          src: "783:3:31",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        src: "770:16:31",
                        typeDescriptions: {
                          typeIdentifier: "t_bool",
                          typeString: "bool",
                        },
                      },
                      {
                        hexValue:
                          "466565206f6620302e3031206d75737420626520616464656420746f207472616e73616374696f6e",
                        id: 29449,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: "string",
                        lValueRequested: false,
                        nodeType: "Literal",
                        src: "788:42:31",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_stringliteral_ff1471d24effdba417518064921f1f2c19405ae2593721616f360c3316b67e03",
                          typeString:
                            'literal_string "Fee of 0.01 must be added to transaction"',
                        },
                        value: "Fee of 0.01 must be added to transaction",
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_bool",
                          typeString: "bool",
                        },
                        {
                          typeIdentifier:
                            "t_stringliteral_ff1471d24effdba417518064921f1f2c19405ae2593721616f360c3316b67e03",
                          typeString:
                            'literal_string "Fee of 0.01 must be added to transaction"',
                        },
                      ],
                      id: 29444,
                      name: "require",
                      nodeType: "Identifier",
                      overloadedDeclarations: [-18, -18],
                      referencedDeclaration: -18,
                      src: "762:7:31",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        typeString: "function (bool,string memory) pure",
                      },
                    },
                    id: 29450,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    nameLocations: [],
                    names: [],
                    nodeType: "FunctionCall",
                    src: "762:69:31",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 29451,
                  nodeType: "ExpressionStatement",
                  src: "762:69:31",
                },
                {
                  assignments: [29453],
                  declarations: [
                    {
                      constant: false,
                      id: 29453,
                      mutability: "mutable",
                      name: "newID",
                      nameLocation: "849:5:31",
                      nodeType: "VariableDeclaration",
                      scope: 29475,
                      src: "841:13:31",
                      stateVariable: false,
                      storageLocation: "default",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                      typeName: {
                        id: 29452,
                        name: "uint256",
                        nodeType: "ElementaryTypeName",
                        src: "841:7:31",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      visibility: "internal",
                    },
                  ],
                  id: 29457,
                  initialValue: {
                    arguments: [],
                    expression: {
                      argumentTypes: [],
                      expression: {
                        id: 29454,
                        name: "_tokenIds",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 29426,
                        src: "857:9:31",
                        typeDescriptions: {
                          typeIdentifier: "t_struct$_Counter_$28205_storage",
                          typeString: "struct Counters.Counter storage ref",
                        },
                      },
                      id: 29455,
                      isConstant: false,
                      isLValue: true,
                      isPure: false,
                      lValueRequested: false,
                      memberLocation: "867:7:31",
                      memberName: "current",
                      nodeType: "MemberAccess",
                      referencedDeclaration: 28217,
                      src: "857:17:31",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_internal_view$_t_struct$_Counter_$28205_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$28205_storage_ptr_$",
                        typeString:
                          "function (struct Counters.Counter storage pointer) view returns (uint256)",
                      },
                    },
                    id: 29456,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    nameLocations: [],
                    names: [],
                    nodeType: "FunctionCall",
                    src: "857:19:31",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  nodeType: "VariableDeclarationStatement",
                  src: "841:35:31",
                },
                {
                  expression: {
                    arguments: [
                      {
                        id: 29459,
                        name: "recipient",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 29437,
                        src: "892:9:31",
                        typeDescriptions: {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                      },
                      {
                        id: 29460,
                        name: "newID",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 29453,
                        src: "903:5:31",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                        {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      ],
                      id: 29458,
                      name: "_mint",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 27217,
                      src: "886:5:31",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        typeString: "function (address,uint256)",
                      },
                    },
                    id: 29461,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    nameLocations: [],
                    names: [],
                    nodeType: "FunctionCall",
                    src: "886:23:31",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 29462,
                  nodeType: "ExpressionStatement",
                  src: "886:23:31",
                },
                {
                  expression: {
                    arguments: [
                      {
                        id: 29464,
                        name: "newID",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 29453,
                        src: "932:5:31",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      {
                        id: 29465,
                        name: "tokenURI",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 29439,
                        src: "939:8:31",
                        typeDescriptions: {
                          typeIdentifier: "t_string_memory_ptr",
                          typeString: "string memory",
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                        {
                          typeIdentifier: "t_string_memory_ptr",
                          typeString: "string memory",
                        },
                      ],
                      id: 29463,
                      name: "_setTokenURI",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 27789,
                      src: "919:12:31",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        typeString: "function (uint256,string memory)",
                      },
                    },
                    id: 29466,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    nameLocations: [],
                    names: [],
                    nodeType: "FunctionCall",
                    src: "919:29:31",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 29467,
                  nodeType: "ExpressionStatement",
                  src: "919:29:31",
                },
                {
                  expression: {
                    arguments: [],
                    expression: {
                      argumentTypes: [],
                      expression: {
                        id: 29468,
                        name: "_tokenIds",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 29426,
                        src: "958:9:31",
                        typeDescriptions: {
                          typeIdentifier: "t_struct$_Counter_$28205_storage",
                          typeString: "struct Counters.Counter storage ref",
                        },
                      },
                      id: 29470,
                      isConstant: false,
                      isLValue: true,
                      isPure: false,
                      lValueRequested: false,
                      memberLocation: "968:9:31",
                      memberName: "increment",
                      nodeType: "MemberAccess",
                      referencedDeclaration: 28231,
                      src: "958:19:31",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_internal_nonpayable$_t_struct$_Counter_$28205_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$28205_storage_ptr_$",
                        typeString:
                          "function (struct Counters.Counter storage pointer)",
                      },
                    },
                    id: 29471,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    nameLocations: [],
                    names: [],
                    nodeType: "FunctionCall",
                    src: "958:21:31",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 29472,
                  nodeType: "ExpressionStatement",
                  src: "958:21:31",
                },
                {
                  expression: {
                    id: 29473,
                    name: "newID",
                    nodeType: "Identifier",
                    overloadedDeclarations: [],
                    referencedDeclaration: 29453,
                    src: "996:5:31",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  functionReturnParameters: 29443,
                  id: 29474,
                  nodeType: "Return",
                  src: "989:12:31",
                },
              ],
            },
            baseFunctions: [29400],
            documentation: {
              id: 29435,
              nodeType: "StructuredDocumentation",
              src: "512:139:31",
              text: " @dev Mints a token for the provided recipient and sets the provided\n URI. This requires that a fee amount is sent.",
            },
            functionSelector: "595c4915",
            implemented: true,
            kind: "function",
            modifiers: [],
            name: "printNFT",
            nameLocation: "665:8:31",
            parameters: {
              id: 29440,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 29437,
                  mutability: "mutable",
                  name: "recipient",
                  nameLocation: "682:9:31",
                  nodeType: "VariableDeclaration",
                  scope: 29476,
                  src: "674:17:31",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_address",
                    typeString: "address",
                  },
                  typeName: {
                    id: 29436,
                    name: "address",
                    nodeType: "ElementaryTypeName",
                    src: "674:7:31",
                    stateMutability: "nonpayable",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                  },
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 29439,
                  mutability: "mutable",
                  name: "tokenURI",
                  nameLocation: "707:8:31",
                  nodeType: "VariableDeclaration",
                  scope: 29476,
                  src: "693:22:31",
                  stateVariable: false,
                  storageLocation: "memory",
                  typeDescriptions: {
                    typeIdentifier: "t_string_memory_ptr",
                    typeString: "string",
                  },
                  typeName: {
                    id: 29438,
                    name: "string",
                    nodeType: "ElementaryTypeName",
                    src: "693:6:31",
                    typeDescriptions: {
                      typeIdentifier: "t_string_storage_ptr",
                      typeString: "string",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "673:43:31",
            },
            returnParameters: {
              id: 29443,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 29442,
                  mutability: "mutable",
                  name: "",
                  nameLocation: "-1:-1:-1",
                  nodeType: "VariableDeclaration",
                  scope: 29476,
                  src: "743:7:31",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 29441,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "743:7:31",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "742:9:31",
            },
            scope: 29500,
            stateMutability: "payable",
            virtual: false,
            visibility: "external",
          },
          {
            id: 29499,
            nodeType: "FunctionDefinition",
            src: "1151:134:31",
            nodes: [],
            body: {
              id: 29498,
              nodeType: "Block",
              src: "1179:106:31",
              nodes: [],
              statements: [
                {
                  assignments: [29481],
                  declarations: [
                    {
                      constant: false,
                      id: 29481,
                      mutability: "mutable",
                      name: "_owner",
                      nameLocation: "1205:6:31",
                      nodeType: "VariableDeclaration",
                      scope: 29498,
                      src: "1189:22:31",
                      stateVariable: false,
                      storageLocation: "default",
                      typeDescriptions: {
                        typeIdentifier: "t_address_payable",
                        typeString: "address payable",
                      },
                      typeName: {
                        id: 29480,
                        name: "address",
                        nodeType: "ElementaryTypeName",
                        src: "1189:15:31",
                        stateMutability: "payable",
                        typeDescriptions: {
                          typeIdentifier: "t_address_payable",
                          typeString: "address payable",
                        },
                      },
                      visibility: "internal",
                    },
                  ],
                  id: 29487,
                  initialValue: {
                    arguments: [
                      {
                        arguments: [],
                        expression: {
                          argumentTypes: [],
                          id: 29484,
                          name: "owner",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 26544,
                          src: "1222:5:31",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_function_internal_view$__$returns$_t_address_$",
                            typeString: "function () view returns (address)",
                          },
                        },
                        id: 29485,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        kind: "functionCall",
                        lValueRequested: false,
                        nameLocations: [],
                        names: [],
                        nodeType: "FunctionCall",
                        src: "1222:7:31",
                        tryCall: false,
                        typeDescriptions: {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                      ],
                      id: 29483,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      lValueRequested: false,
                      nodeType: "ElementaryTypeNameExpression",
                      src: "1214:8:31",
                      typeDescriptions: {
                        typeIdentifier: "t_type$_t_address_payable_$",
                        typeString: "type(address payable)",
                      },
                      typeName: {
                        id: 29482,
                        name: "address",
                        nodeType: "ElementaryTypeName",
                        src: "1214:8:31",
                        stateMutability: "payable",
                        typeDescriptions: {},
                      },
                    },
                    id: 29486,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "typeConversion",
                    lValueRequested: false,
                    nameLocations: [],
                    names: [],
                    nodeType: "FunctionCall",
                    src: "1214:16:31",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_address_payable",
                      typeString: "address payable",
                    },
                  },
                  nodeType: "VariableDeclarationStatement",
                  src: "1189:41:31",
                },
                {
                  expression: {
                    arguments: [
                      {
                        expression: {
                          arguments: [
                            {
                              id: 29493,
                              name: "this",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: -28,
                              src: "1264:4:31",
                              typeDescriptions: {
                                typeIdentifier: "t_contract$_NFTPrinter_$29500",
                                typeString: "contract NFTPrinter",
                              },
                            },
                          ],
                          expression: {
                            argumentTypes: [
                              {
                                typeIdentifier: "t_contract$_NFTPrinter_$29500",
                                typeString: "contract NFTPrinter",
                              },
                            ],
                            id: 29492,
                            isConstant: false,
                            isLValue: false,
                            isPure: true,
                            lValueRequested: false,
                            nodeType: "ElementaryTypeNameExpression",
                            src: "1256:7:31",
                            typeDescriptions: {
                              typeIdentifier: "t_type$_t_address_$",
                              typeString: "type(address)",
                            },
                            typeName: {
                              id: 29491,
                              name: "address",
                              nodeType: "ElementaryTypeName",
                              src: "1256:7:31",
                              typeDescriptions: {},
                            },
                          },
                          id: 29494,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          kind: "typeConversion",
                          lValueRequested: false,
                          nameLocations: [],
                          names: [],
                          nodeType: "FunctionCall",
                          src: "1256:13:31",
                          tryCall: false,
                          typeDescriptions: {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                        },
                        id: 29495,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        lValueRequested: false,
                        memberLocation: "1270:7:31",
                        memberName: "balance",
                        nodeType: "MemberAccess",
                        src: "1256:21:31",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      ],
                      expression: {
                        id: 29488,
                        name: "_owner",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 29481,
                        src: "1240:6:31",
                        typeDescriptions: {
                          typeIdentifier: "t_address_payable",
                          typeString: "address payable",
                        },
                      },
                      id: 29490,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      memberLocation: "1247:8:31",
                      memberName: "transfer",
                      nodeType: "MemberAccess",
                      src: "1240:15:31",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        typeString: "function (uint256)",
                      },
                    },
                    id: 29496,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    nameLocations: [],
                    names: [],
                    nodeType: "FunctionCall",
                    src: "1240:38:31",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 29497,
                  nodeType: "ExpressionStatement",
                  src: "1240:38:31",
                },
              ],
            },
            baseFunctions: [29403],
            documentation: {
              id: 29477,
              nodeType: "StructuredDocumentation",
              src: "1014:132:31",
              text: " @dev `collect` handles the sending of collected fees to the owner account.\n This can be called by any user.",
            },
            functionSelector: "e5225381",
            implemented: true,
            kind: "function",
            modifiers: [],
            name: "collect",
            nameLocation: "1160:7:31",
            parameters: {
              id: 29478,
              nodeType: "ParameterList",
              parameters: [],
              src: "1167:2:31",
            },
            returnParameters: {
              id: 29479,
              nodeType: "ParameterList",
              parameters: [],
              src: "1179:0:31",
            },
            scope: 29500,
            stateMutability: "nonpayable",
            virtual: false,
            visibility: "external",
          },
        ],
        abstract: false,
        baseContracts: [
          {
            baseName: {
              id: 29411,
              name: "ERC721URIStorage",
              nameLocations: ["291:16:31"],
              nodeType: "IdentifierPath",
              referencedDeclaration: 27820,
              src: "291:16:31",
            },
            id: 29412,
            nodeType: "InheritanceSpecifier",
            src: "291:16:31",
          },
          {
            baseName: {
              id: 29413,
              name: "INFTPrinter",
              nameLocations: ["309:11:31"],
              nodeType: "IdentifierPath",
              referencedDeclaration: 29404,
              src: "309:11:31",
            },
            id: 29414,
            nodeType: "InheritanceSpecifier",
            src: "309:11:31",
          },
          {
            baseName: {
              id: 29415,
              name: "Ownable",
              nameLocations: ["322:7:31"],
              nodeType: "IdentifierPath",
              referencedDeclaration: 26616,
              src: "322:7:31",
            },
            id: 29416,
            nodeType: "InheritanceSpecifier",
            src: "322:7:31",
          },
        ],
        canonicalName: "NFTPrinter",
        contractDependencies: [],
        contractKind: "contract",
        fullyImplemented: true,
        linearizedBaseContracts: [
          29500, 26616, 29404, 27820, 27561, 27847, 27677, 28472, 28484, 28199,
        ],
        name: "NFTPrinter",
        nameLocation: "277:10:31",
        scope: 29501,
        usedErrors: [],
      },
    ],
  },
  id: 31,
};
